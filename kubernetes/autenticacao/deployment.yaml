apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-api-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-api-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
apiVersion: v1
kind: Service
metadata:
  name: auth-api-svc
spec:
  type: NodePort
  externalTrafficPolicy: Cluster
  selector:
    app: auth-api-pod
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30008
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-api-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: auth-api-pod
  template:
    metadata:
      labels:
        app: auth-api-pod
    spec:
      initContainers:
        - name: wait-for-rabbitmq
          image: busybox
          command:
            [
              "sh",
              "-c",
              "until nc -z rabbitmq-svc 5672; do echo waiting for rabbitmq; sleep 2; done;",
            ]
      containers:
        - name: auth-api-pod
          image: auth-api-image
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: "RABBITMQ_HOST"
              value: "$(RABBITMQ_HOST)"
            - name: "ASPNETCORE_ENVIRONMENT"
              value: "$(ASPNETCORE_ENVIRONMENT)"
            - name: "CONNECTION_STRING"
              value: "Server=auth-mysql-svc;Database=$(DB_DATABASE);User=$(DB_USER);Password=$(DB_PASSWORD);Port=$(DB_PORT);"
          envFrom:
            - configMapRef:
                name: api-configmap
            - configMapRef:
                name: auth-mysql-configmap
            - secretRef:
                name: mysql-secret
          resources:
            requests:
              cpu: "10m"
---
apiVersion: v1
kind: Service
metadata:
  name: auth-mysql-svc
  labels:
    app: auth-mysql-svc
spec:
  ports:
    - port: 3306
      name: auth-mysql
  clusterIP: None
  selector:
    app: auth-mysql-pod
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: auth-mysql-statefulset
spec:
  serviceName: auth-mysql-svc
  replicas: 1
  minReadySeconds: 10
  selector:
    matchLabels:
      app: auth-mysql-pod
  template:
    metadata:
      labels:
        app: auth-mysql-pod
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: auth-mysql-pod
          image: mysql:8.0
          imagePullPolicy: Never
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: DB_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: auth-mysql-configmap
                  key: DB_DATABASE
          livenessProbe:
            exec:
              command: ["mysqladmin", "ping", "-h", "localhost"]
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          volumeMounts:
            - name: auth-mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: auth-mysql-storage
          persistentVolumeClaim:
            claimName: auth-mysql-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: auth-mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
